"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2265],{66799:e=>{e.exports=JSON.parse('{"url":"redocusaurus/plugin-redoc-0.yaml","themeId":"theme-redoc","isSpecFile":true,"spec":{"openapi":"3.1.0","info":{"title":"Freddy\'s shop API","version":"1.0.0","license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"description":"This API serves as the backbone for managing Freddy\'s artisanal Halloween candy shop. Through this API, Freddy can perform various tasks such as managing dashboard data, handling orders, and authenticating users.\\n\\n### API Behavior\\n- **Authentication**: Almost every endpoint requires authentication. A missing or invalid `access_token` will result in a `401 Unauthorized` response.\\n- **Error Handling**: Proper error messages are provided to guide through the required correction. For example, a `400 Bad Request` for missing parameters.\\n- **Rate Limiting**: Although not mentioned, it is advised to handle HTTP `429 Too Many Requests` response gracefully.\\n\\n### General Overview\\n- **Login Endpoint**: Allows you to log in and receive access and refresh tokens.\\n- **Refresh Endpoint**: Allows you to get the new `access_token`, when the previous one expires. \\n- **Dashboard Endpoint**: Provides necessary data for populating the dashboard.\\n- **Orders Endpoint**: Fetches orders, supporting pagination and search.\\n\\nFor more details on each endpoint, refer to the respective sections below.\\n","x-logo":{"url":"Freddys_Logo.svg"}},"servers":[{"url":"https://freddy.codesubmit.io"}],"paths":{"/login":{"post":{"summary":"Log in to the Shop\'s admin panel","operationId":"login","description":"Authenticate the user and receive `access_token` and `refresh_token`. The `access_token` is used for authorization in subsequent API requests.\\n\\n### Behavior\\n- Providing incorrect credentials results in `401 Unauthorized` with an explicit error message.\\n","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["username","password"],"properties":{"username":{"type":"string","default":"freddy","description":"Username to log in."},"password":{"type":"string","default":"ElmStreet2019","description":"Password for the corresponding username."}}}}}},"x-codeSamples":[{"lang":"cURL","source":"curl --location \'https://freddy.codesubmit.io/login\' \\\\\\n--header \'Content-Type: application/json\' \\\\\\n--header \'Accept: application/json\' \\\\\\n--data \'{\\n  \\"username\\": \\"freddy\\",\\n  \\"password\\": \\"ElmStreet2019\\",\\n}\'\\n  \\n"}],"responses":{"200":{"description":"Authentication successful.","content":{"application/json":{"schema":{"type":"object","properties":{"access_token":{"type":"string","description":"The JWT `access_token` is valid for 15 minutes. After expiration, send the POST request to the [`/refresh_token`](#operation/refresh) endpoint to renew.","example":"o9JyblnSi1[...]AKGcehJui"},"token_type":{"type":"string","default":"Bearer"},"access_token_expires_in":{"type":"integer","default":900},"refresh_token":{"type":"string","description":"Use the `refresh_token` is valid for 30 days.","example":"JbeSGy91uK[...]nJoiclAhi"},"refresh_token_expires_in":{"type":"integer","default":2592000}}}}}},"400":{"$ref":"#/components/responses/badRequest"},"401":{"description":"User authentication failed. Invalid username-password combination.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Invalid credentials"},"message":{"type":"string","example":"The provided username or password is incorrect."}}}}}}}}},"/refresh_token":{"post":{"summary":"Request new `access_token`","operationId":"refresh","description":"Request new `access_token`. \\n\\nThe `access_token` expires in 15 minutes after acquiring. The `refresh_token` expires in 30 days.\\n\\n### Behavior\\n\\nAn invalid or missing `refresh_token` in the header will result in a `400 Bad Request` or `401 Unauthorized` response with a clear error message.\\n","parameters":[{"in":"header","name":"Authorization","schema":{"type":"string","default":"Bearer refresh_token"},"required":true}],"x-codeSamples":[{"lang":"cURL","source":"curl --location --request POST \'https://freddy.codesubmit.io/refresh_token\' \\\\\\n--header \'Accept: application/json\' \\\\\\n--header \'Authorization: Bearer {{refresh_token}}\'\\n"}],"responses":{"200":{"description":"Successful token refresh","content":{"application/json":{"schema":{"type":"object","properties":{"access_token":{"type":"string","description":"The JWT `access_token` is valid for 15 minutes.","example":"Ey9iGeln1b[...]ShiOcuKaA"},"token_type":{"type":"string","default":"Bearer"},"access_token_expires_in":{"type":"integer","default":900}}}}}},"400":{"description":"Bad request. The request may be missing the `refresh_token` in the header or contains an invalid token format.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Bad request"},"message":{"type":"string","example":"The `refresh_token` missing or invalid format of the request."}}}}}},"401":{"description":"User authentication failed. Invalid refresh token provided.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Invalid refresh token."}}}}}}}}},"/dashboards":{"get":{"summary":"Retrieve Dashboard data","description":"Retrieve the data from the dashboard. Make sure you use the `access_token` received from the `/login` endpoint. \\n\\n**Note**: If the `access_token` is expired after 15 minutes, request a fresh one using the [`/refresh_token`](/#operation/refresh) endpoint.\\n","operationId":"dashboard","parameters":[{"$ref":"#/components/parameters/AuthorizationHeader"}],"x-codeSamples":[{"lang":"cURL","source":"curl --location \'https://freddy.codesubmit.io/dashboards\' \\\\\\n--header \'Accept: application/json\' \\\\\\n--header \'Authorization: Bearer {{access_token}}\'\\n      \\n"}],"responses":{"200":{"description":"Dashboard data retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"blocks":{"type":"array","items":{"type":"object","properties":{"period":{"type":"string","enum":["today","lastWeek","lastMonth"],"description":"Time period","example":"lastWeek"},"totalRevenue":{"type":"number","format":"float","description":"Total revenue in USD for the given period","example":34000},"numberOfOrders":{"type":"integer","description":"Number of orders for the given period","example":120}}}},"barChartImageUrl":{"type":"string","format":"uri","description":"URL to fetch the bar chart image representing revenue data"},"bestsellers":{"type":"array","items":{"type":"object","properties":{"productName":{"type":"string","description":"Name of the best-selling product","example":"Necronomicon"},"price":{"type":"number","format":"float","description":"Price of the product","example":66.9},"unitsSold":{"type":"integer","description":"Number of units sold for the product","example":100500},"revenue":{"type":"number","format":"float","description":"Total revenue generated from the product","example":6723450}}}}}}}}},"400":{"$ref":"#/components/responses/badRequest"},"401":{"$ref":"#/components/responses/invalidToken"}}}},"/orders":{"get":{"summary":"Retrieve the list of Orders","description":"Fetch the orders. \\n\\nYou can paginate results using the `page` parameter and filter them with the `q` parameter. Make sure to use the `access_token` retrieved from the `/login` endpoint.\\n\\n### Behavior\\n\\n- Missing `page` or `q` parameters will still yield a `200 OK` response with unfiltered or first-page data.\\n- Providing invalid `page` parameter, like 0 or a negative number, results in `400 Bad Request` with a clear error message.\\n","operationId":"orders","parameters":[{"$ref":"#/components/parameters/AuthorizationHeader"},{"name":"page","in":"query","schema":{"type":"integer","format":"int32","minimum":1},"description":"Retrieve orders from the specific page number.","example":1},{"name":"q","in":"query","required":false,"schema":{"type":"string"},"description":"Search a term to filter the orders","example":"Spooky skeleton"}],"x-codeSamples":[{"lang":"cURL","source":"curl --location \'https://freddy.codesubmit.io/orders?page=2&q=Necronomicon\' \\\\\\n--header \'Accept: application/json\' \\\\\\n--header \'Authorization: Bearer {{access_token}}\'\\n"}],"responses":{"200":{"description":"Successfully retrieved data","content":{"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/Order"}},"totalItems":{"type":"integer","example":25},"totalPages":{"type":"integer","example":3},"currentPage":{"type":"integer","example":1}}}}}},"400":{"$ref":"#/components/responses/badRequest"},"401":{"$ref":"#/components/responses/invalidToken"}}}}},"security":[{"BearerAuth":[]}],"components":{"parameters":{"AuthorizationHeader":{"name":"Authorization","in":"header","required":true,"description":"JWT `access_token` received after successful login.","schema":{"type":"string","example":"Bearer access_token"}}},"responses":{"invalidToken":{"description":"User authentication failed. `access_token` may have expired or is invalid. To renew, send the POST request to the [`/refresh_token`](#operation/refresh) endpoint.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Invalid `access_token` provided"}}}}}},"badRequest":{"description":"Bad request. The request may be missing required parameters or contains invalid data.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Bad request"},"message":{"type":"string","example":"Required parameters missing or contain invalid data."}}}}}}},"securitySchemes":{"BearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}},"schemas":{"Order":{"type":"object","properties":{"productName":{"type":"string","description":"Name of the product","example":"At the Mountains of Madness"},"date":{"type":"string","format":"date","description":"Date of the order","example":"01/19/1931"},"price":{"type":"number","format":"float","description":"Price of the order","example":10.99},"status":{"type":"string","enum":["Processing","Shipped","Delivered"],"description":"Status of the order","example":"Delivered"}}}}}}}')}}]);